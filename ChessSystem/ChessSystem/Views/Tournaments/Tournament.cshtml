@model ChessSystem.Models.Tournaments

@{
    var isUserLoggedIn = Session["UserId"] != null;
    var userId = isUserLoggedIn ? int.Parse(Session["UserId"].ToString()) : 0;
    var isOwner = isUserLoggedIn && userId == Model.OrganizerId;
    var players = ChessSystem.Models.TournamentsHelper.GetTournamentPlayers(Model);
    var games = Model.Games.Where(game => game.TournamentId.HasValue && game.TournamentId.Value == Model.Id).ToArray();
}

@Html.Partial("_Navbar")

<div class="col-md-10 col-md-offset-1">
    <h1 class="header-margin">@Model.Name</h1>
    <div class="col-md-6 row">
        <table class="table table-bordered">
            <tr>
                <td class="bold col-md-4">Organizer</td>
                <td class="col-md-8">@Model.Users.Name</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Date</td>
                <td class="col-md-8">@(Model.Date.HasValue ? Model.Date.Value.ToString() : "-")</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Place</td>
                <td class="col-md-8">@(Model.Place != null ? Model.Place : "-")</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Players</td>
                <td class="col-md-8">@players.Length</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Registered games</td>
                <td class="col-md-8">@games.Length</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Finished</td>
                <td class="col-md-8">@(Model.IsFinished == false ? "No" : "Yes")</td>
            </tr>
            <tr>
                <td class="bold col-md-4">Public</td>
                <td class="col-md-8">@(Model.IsPublic == false ? "No" : "Yes")</td>
            </tr>
        </table>
    </div>
    @if (isOwner)
    {
        <div class="col-md-6 text-right">
            @(Html.ActionLink(
                "Edit",
                "Edit",
                "Tournaments",
                new { id = Model.Id },
                new { role="button", @class = "btn btn-primary" }
            ))
            @(Html.ActionLink
            (
                "Delete",
                "Delete",
                "Tournaments",
                new { id = Model.Id },
                new { role="button", @class = "btn btn-primary" }
            ))
        </div>
    }
</div>

<div class="col-md-10 col-md-offset-1 section-margin">
    <div class="row">
        <div class="col-md-9">
            <h3 class="header-margin">Players</h3>
        </div>
        @if (isOwner && !Model.IsFinished)
        {
            <div class="col-md-3 text-right">
                @(Html.ActionLink
            (
                "Add player",
                "AddParticipation",
                "Tournaments",
                new
                {
                    id = Model.Id
                },
                new
                {
                    role = "button",
                    @class = "btn btn-primary",
                    style = "margin-top: 20px;"
                }
            ))
            </div>
        }
    </div>
    
    <table
        class="table table-striped"
        data-toggle="table"
        data-sort-name="place"
        data-sort-order="asc"
    >
        <thead class="bold">
            <tr>
                <th data-field="tagname" data-sortable="true">Tagname</th>
                <th data-field="name" data-sortable="true">Name</th>
                <th data-field="place" data-sortable="true">Place</th>
                <th data-field="games" data-sortable="true">Finished games</th>
                <th data-field="won" data-sortable="true">Won</th>
                <th data-field="lost" data-sortable="true">Lost</th>
                <th data-field="drawn" data-sortable="true">Drawn</th>
                @if (isOwner)
                {
                    <th>Edit</th>
                    <th>Delete</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var player in players)
            {
                int place = ChessSystem.Models.TournamentsHelper.GetPlayersPlace(Model, player);
                var participation = ChessSystem.Models.ParticipationsHelper.GetParticipation(Model.Id, player.Id);

                <tr>
                    <td>@Html.ActionLink(player.Tagname, "Player", "Players", new { id = player.Id }, null)</td>
                    <td>@($"{player.FirstName} {player.LastName}")</td>
                    <td>@(place != 0 ? place.ToString() : "-")</td>
                    <td>@(player.Won + player.Lost + player.Drawn)</td>
                    <td>@player.Won</td>
                    <td>@player.Lost</td>
                    <td>@player.Drawn</td>
                    @if (isOwner)
                    {
                        <td>
                            @(Html.ActionLink
                            (
                                "Edit",
                                "EditParticipation",
                                "Tournaments",
                                new { id = participation.Id },
                                null
                            ))
                        </td>
                        <td>
                            @(Html.ActionLink
                            (
                                "Delete",
                                "DeleteParticipation",
                                "Tournaments",
                                new { id = participation.Id },
                                null
                            ))
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="col-md-10 col-md-offset-1 section-margin section-margin-bottom">
    <div class="row">
        <div class="col-md-9">
            <h3 class="header-margin">Games</h3>
        </div>
        @if (isOwner && !Model.IsFinished)
        {
            <div class="col-md-3 text-right">
                @(Html.ActionLink
            (
                "Add game",
                "Add",
                "Games",
                new
                {
                    id = Model.Id
                },
                new
                {
                    role = "button",
                    @class = "btn btn-primary",
                    style = "margin-top: 20px;"
                }
            ))
            </div>
        }
    </div>

    <table
        class="table table-striped"
        data-toggle="table"
        data-sort-name="date"
        data-sort-order="asc"
    >
        <thead class="bold">
            <tr>
                <th data-field="player1" data-sortable="true">Player 1</th>
                <th data-field="player2" data-sortable="true">Player 2</th>
                <th data-field="winner" data-sortable="true">Winner</th>
                <th data-field="date" data-sortable="true">Date</th>
                <th data-field="duration" data-sortable="true">Duration</th>
                <th data-field="moves" data-sortable="true">Moves</th>
                <th data-field="finished" data-sortable="true">Finished</th>
                <th>Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                var winnerExists = game.WinnerId.HasValue;
                var player1 = ChessSystem.Models.GamesHelper.GetPlayer1(game);
                var player2 = ChessSystem.Models.GamesHelper.GetPlayer2(game);
                var winner = ChessSystem.Models.GamesHelper.GetWinner(game);

                <tr>
                    <td>@Html.ActionLink(player1.Tagname, "Player", "Players", new { id = player1.Id }, null)</td>
                    <td>@Html.ActionLink(player2.Tagname, "Player", "Players", new { id = player2.Id }, null)</td>
                    <td>
                        @(
                            game.IsFinished == true ?
                                winnerExists ? winner.Tagname : "drawn"
                            : "-"
                        )
                    </td>
                    <td>@(game.Date.HasValue ? game.Date.Value.ToString() : "-")</td>
                    <td>@TimeSpan.FromSeconds(game.Duration).ToString(@"hh\:mm\:ss")</td>
                    <td>@game.Moves</td>
                    <td>@(game.IsFinished == true ? "Yes" : "No")</td>
                    <td>@Html.ActionLink("Link", "Game", "Games", new { id = game.Id }, null)</td>
                </tr>
            }
        </tbody>
    </table>
</div>
